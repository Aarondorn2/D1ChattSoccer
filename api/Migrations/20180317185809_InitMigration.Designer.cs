// <auto-generated />
using D1SoccerService.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace D1SoccerService.Migrations
{
    [DbContext(typeof(D1SoccerServiceContext))]
    [Migration("20180317185809_InitMigration")]
    partial class InitMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("D1SoccerService.Entities.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnName("content");

                    b.Property<DateTime>("SystemLoadDate")
                        .HasColumnName("system_load_date")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("announcement");
                });

            modelBuilder.Entity("D1SoccerService.Entities.Cachedusers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("CacheTime")
                        .HasColumnName("cache_time")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(255);

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnName("token")
                        .HasMaxLength(255);

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnName("uid")
                        .HasMaxLength(100);

                    b.Property<int?>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .HasName("indx_token");

                    b.ToTable("cachedusers");
                });

            modelBuilder.Entity("D1SoccerService.Entities.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ContractDisplayName")
                        .IsRequired()
                        .HasColumnName("contract_display_name")
                        .HasMaxLength(100);

                    b.Property<string>("ContractName")
                        .IsRequired()
                        .HasColumnName("contract_name")
                        .HasMaxLength(100);

                    b.Property<string>("ContractText")
                        .IsRequired()
                        .HasColumnName("contract_text");

                    b.Property<DateTime>("ContractValidEndDate")
                        .HasColumnName("contract_valid_end_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ContractValidStartDate")
                        .HasColumnName("contract_valid_start_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("SystemLoadDate")
                        .HasColumnName("system_load_date")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("contract");
                });

            modelBuilder.Entity("D1SoccerService.Entities.Manualuserseasons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("HasPaid")
                        .HasColumnName("has_paid")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("HasTeam")
                        .HasColumnName("has_team")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("HasWaiver")
                        .HasColumnName("has_waiver")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("IsManual")
                        .HasColumnName("is_manual")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PaymentId")
                        .HasColumnName("payment_id")
                        .HasColumnType("int(11)");

                    b.Property<int>("SeasonId")
                        .HasColumnName("season_id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("SystemLoadDate")
                        .HasColumnName("system_load_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("SystemUpdateDate")
                        .HasColumnName("system_update_date")
                        .HasColumnType("datetime");

                    b.Property<int?>("TeamId")
                        .HasColumnName("team_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("user_name")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("manualuserseasons");
                });

            modelBuilder.Entity("D1SoccerService.Entities.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("end_date")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.Property<DateTime>("RegistrationEndDate")
                        .HasColumnName("registration_end_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("RegistrationStartDate")
                        .HasColumnName("registration_start_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("start_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("SystemLoadDate")
                        .HasColumnName("system_load_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("SystemUpdateDate")
                        .HasColumnName("system_update_date")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("season");
                });

            modelBuilder.Entity("D1SoccerService.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("CaptainFirstName")
                        .IsRequired()
                        .HasColumnName("captain_first_name")
                        .HasMaxLength(255);

                    b.Property<int>("CaptainId")
                        .HasColumnName("captain_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("CaptainLastName")
                        .IsRequired()
                        .HasColumnName("captain_last_name")
                        .HasMaxLength(255);

                    b.Property<DateTime>("SystemLoadDate")
                        .HasColumnName("system_load_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("SystemUpdateDate")
                        .HasColumnName("system_update_date")
                        .HasColumnType("datetime");

                    b.Property<string>("TeamColor")
                        .IsRequired()
                        .HasColumnName("team_color")
                        .HasMaxLength(55);

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnName("team_name")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("team");
                });

            modelBuilder.Entity("D1SoccerService.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("Dob")
                        .HasColumnName("dob")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(255);

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasColumnName("emergency_contact")
                        .HasMaxLength(255);

                    b.Property<string>("EmergencyContactPhone")
                        .IsRequired()
                        .HasColumnName("emergency_contact_phone")
                        .HasMaxLength(20);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasMaxLength(255);

                    b.Property<string>("Gender")
                        .HasColumnName("gender")
                        .HasMaxLength(20);

                    b.Property<bool>("IsDefense")
                        .HasColumnName("is_defense")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsKeeper")
                        .HasColumnName("is_keeper")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsOffense")
                        .HasColumnName("is_offense")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasMaxLength(255);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("phone")
                        .HasMaxLength(20);

                    b.Property<string>("ShirtSize")
                        .HasColumnName("shirt_size")
                        .HasMaxLength(20);

                    b.Property<DateTime>("SystemLoadDate")
                        .HasColumnName("system_load_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("SystemUpdateDate")
                        .HasColumnName("system_update_date")
                        .HasColumnType("datetime");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnName("user_type")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .HasName("indx_email");

                    b.ToTable("users");
                });

            modelBuilder.Entity("D1SoccerService.Entities.Userseasons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("HasPaid")
                        .HasColumnName("has_paid")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("HasTeam")
                        .HasColumnName("has_team")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("HasWaiver")
                        .HasColumnName("has_waiver")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("IsManual")
                        .HasColumnName("is_manual")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PaymentId")
                        .HasColumnName("payment_id")
                        .HasColumnType("int(11)");

                    b.Property<int>("SeasonId")
                        .HasColumnName("season_id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("SystemLoadDate")
                        .HasColumnName("system_load_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("SystemUpdateDate")
                        .HasColumnName("system_update_date")
                        .HasColumnType("datetime");

                    b.Property<int?>("TeamId")
                        .HasColumnName("team_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("WaiverId")
                        .HasColumnName("waiver_id")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasName("IDX_E728F53EA76ED395");

                    b.HasIndex("WaiverId")
                        .IsUnique()
                        .HasName("UNIQ_E728F53EA43B7175");

                    b.ToTable("userseasons");
                });

            modelBuilder.Entity("D1SoccerService.Entities.Waiver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("AcceptedDate")
                        .HasColumnName("accepted_date")
                        .HasColumnType("datetime");

                    b.Property<string>("AcceptedEmail")
                        .IsRequired()
                        .HasColumnName("accepted_email")
                        .HasMaxLength(255);

                    b.Property<string>("AcceptedIpaddress")
                        .IsRequired()
                        .HasColumnName("accepted_ipaddress")
                        .HasMaxLength(255);

                    b.Property<string>("AcceptedName")
                        .IsRequired()
                        .HasColumnName("accepted_name")
                        .HasMaxLength(510);

                    b.Property<int?>("ContractId")
                        .HasColumnName("contract_id")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("HasAccepted")
                        .HasColumnName("has_accepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("SystemLoadDate")
                        .HasColumnName("system_load_date")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ContractId")
                        .HasName("IDX_B364E1BE2576E0FD");

                    b.ToTable("waiver");
                });

            modelBuilder.Entity("D1SoccerService.Entities.Userseasons", b =>
                {
                    b.HasOne("D1SoccerService.Entities.Users", "User")
                        .WithMany("Userseasons")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_E728F53EA76ED395");

                    b.HasOne("D1SoccerService.Entities.Waiver", "Waiver")
                        .WithOne("Userseasons")
                        .HasForeignKey("D1SoccerService.Entities.Userseasons", "WaiverId")
                        .HasConstraintName("FK_E728F53EA43B7175");
                });

            modelBuilder.Entity("D1SoccerService.Entities.Waiver", b =>
                {
                    b.HasOne("D1SoccerService.Entities.Contract", "Contract")
                        .WithMany("Waiver")
                        .HasForeignKey("ContractId")
                        .HasConstraintName("FK_B364E1BE2576E0FD");
                });
#pragma warning restore 612, 618
        }
    }
}
